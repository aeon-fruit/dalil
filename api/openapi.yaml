openapi: 3.1.0
info:
  contact:
    name: Atef N
  description: Todo lists on steroids
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Dalil
  version: 0.1.0
servers:
  - description: Local server
    url: http://localhost:10080/api/v1
paths:
  /tasks:
    get:
      operationId: getTasks
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GetTaskResponse"
                type: array
                uniqueItems: true
          description: A list of all the tasks.
        "204":
          description: No tasks.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error case.
      description: Returns a list of the tasks.
      tags:
        - Tasks
    post:
      operationId: addTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertTaskRequest"
        description: The task to add to the list.
        required: true
      responses:
        "201":
          description: The task was successfully added to the list.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error case.
      description: Adds a new task of the list.
      tags:
        - Tasks
  /tasks/{id}:
    get:
      operationId: getTaskById
      parameters:
        - description: The ID of the requested task.
          explode: false
          in: path
          name: id
          required: true
          schema:
            pattern: ^\d+$
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTaskResponse"
          description: The task having the specified ID, if found.
        "404":
          description: The task having the specified ID was not found.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error case.
      description: Returns a task by its ID, if found.
      tags:
        - Tasks
    delete:
      operationId: deleteTaskById
      parameters:
        - description: The ID of the task to remove.
          explode: false
          in: path
          name: id
          required: true
          schema:
            pattern: ^\d+$
            type: string
          style: simple
      responses:
        "204":
          description: The task was successfully deleted from the list.
        "404":
          description: The task having the specified ID was not found.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error case.
      description: Deletes a task from the list given its ID.
      tags:
        - Tasks
    put:
      operationId: updateTask
      parameters:
        - description: The ID of the task to update.
          explode: false
          in: path
          name: id
          required: true
          schema:
            pattern: ^\d+$
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertTaskRequest"
        description: The updated task content and/or status.
        required: true
      responses:
        "204":
          description: The task content and/or status was modified successfully.
        "304":
          description: The old and the new content and/or status of the task are the same.
        "404":
          description: The task having the specified ID was not found.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error case.
      description: Updates the content and/or the status of a task in the list given its ID.
      tags:
        - Tasks
  /k8s/readiness:
    get:
      operationId: k8sReadinessProbe
      responses:
        "200":
          description: The server is ready.
      description: Kubernetes readiness probe.
      tags:
        - Kubernetes probes
  /k8s/liveness:
    get:
      operationId: k8sLivenessProbe
      responses:
        "200":
          description: The server is alive.
      description: Kubernetes liveness probe.
      tags:
        - Kubernetes probes
components:
  schemas:
    GetTaskResponse:
      example:
        id: 0
        name: "A simple task"
        statusId: 0
        description: "The description of the simple task"
        createdAt: "2023-03-12T18:01:39.784223404+00:00"
        updatedAt: "2023-03-12T18:01:53.087297357+00:00"
      properties:
        id:
          description: The task ID.
          type: integer
        name:
          description: The task name.
          minLength: 1
          type: string
        statusId:
          description: The ID of the status of the task.
          type: integer
        description:
          description: The task description.
          type: string
        createdAt:
          description: Timestamp of the creation of the task.
          format: date-time
          type: string
        updatedAt:
          description: Timestamp of the last update of the task.
          format: date-time
          type: string
      required:
        - id
        - name
        - statusId
        - createdAt
        - updatedAt
      type: object
    UpsertTaskRequest:
      example:
        id: 3
        name: "A simple task"
        statusId: 0
        description: "The description of the simple task"
      properties:
        id:
          description: The task ID.
          type: integer
        name:
          description: The task name.
          minLength: 1
          type: string
        statusId:
          description: The ID of the status of the task.
          type: integer
        description:
          description: The task description.
          type: string
      required:
        - name
        - statusId
      type: object
    ErrorResponse:
      example:
        code: 400
        message: "Detailed error message"
        timestamp: "2023-03-12T18:01:53.087297357+00:00"
      properties:
        code:
          description: The ID code of the error.
          type: integer
        message:
          description: The error message.
          type: string
        timestamp:
          description: The error timestamp.
          format: date-time
          type: string
      required:
        - code
        - message
        - timestamp
      type: object
tags:
  - name: Tasks
  - name: Kubernetes probes
